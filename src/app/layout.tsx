import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/ui/theme-provider";
import { GoogleOAuthProvider } from "@react-oauth/google";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import ReduxProvider from "@/store/provider";
import { PersistGateProvider } from "@/lib/presistor/presistGate";
import { ReactQueryClientProvider } from "@/lib/queryclient/queryclient";
const clientId = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID as string;
console.log("ðŸš€ ~ clientId:", clientId);
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ReduxProvider>
          <PersistGateProvider>
            <ThemeProvider defaultTheme="light" storageKey="vite-ui-theme">
              <GoogleOAuthProvider clientId={clientId}>
                <ReactQueryClientProvider>{children}</ReactQueryClientProvider>
              </GoogleOAuthProvider>
            </ThemeProvider>
          </PersistGateProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
